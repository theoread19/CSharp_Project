// <auto-generated />
using System;
using CSharp_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharp_Project.Migrations
{
    [DbContext(typeof(C_ProjectDBContext))]
    [Migration("20210618095805_C_Project_V1")]
    partial class C_Project_V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Vietnamese_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSharp_Project.Models.CategoryTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UQ__category__357D4CF98E97379F")
                        .IsUnique();

                    b.ToTable("category_table");
                });

            modelBuilder.Entity("CSharp_Project.Models.CommentTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("createBy");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedDate");

                    b.Property<long>("NewsId")
                        .HasColumnType("bigint")
                        .HasColumnName("newsId");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex(new[] { "CreateBy" }, "IX_comment_table_createBy");

                    b.ToTable("comment_table");
                });

            modelBuilder.Entity("CSharp_Project.Models.NewsTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("categoryId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("createBy");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shortDescription");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("thumbnail");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_news_table_categoryId");

                    b.HasIndex(new[] { "CreateBy" }, "IX_news_table_createBy");

                    b.ToTable("news_table");
                });

            modelBuilder.Entity("CSharp_Project.Models.RoleTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UQ__role_tab__357D4CF9E303D637")
                        .IsUnique();

                    b.ToTable("role_table");
                });

            modelBuilder.Entity("CSharp_Project.Models.UserTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("roleId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_user_table_roleId");

                    b.HasIndex(new[] { "Username" }, "UQ__user_tab__F3DBC5720A716196")
                        .IsUnique();

                    b.ToTable("user_table");
                });

            modelBuilder.Entity("CSharp_Project.Models.CommentTable", b =>
                {
                    b.HasOne("CSharp_Project.Models.UserTable", "CreateByNavigation")
                        .WithMany("CommentTables")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__comment_t__creat__31EC6D26")
                        .IsRequired();

                    b.HasOne("CSharp_Project.Models.NewsTable", "News")
                        .WithMany("CommentTables")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("CreateByNavigation");

                    b.Navigation("News");
                });

            modelBuilder.Entity("CSharp_Project.Models.NewsTable", b =>
                {
                    b.HasOne("CSharp_Project.Models.CategoryTable", "Category")
                        .WithMany("NewsTables")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__news_tabl__categ__2E1BDC42")
                        .IsRequired();

                    b.HasOne("CSharp_Project.Models.UserTable", "CreateByNavigation")
                        .WithMany("NewsTables")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK__news_tabl__creat__2F10007B")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CreateByNavigation");
                });

            modelBuilder.Entity("CSharp_Project.Models.UserTable", b =>
                {
                    b.HasOne("CSharp_Project.Models.RoleTable", "Role")
                        .WithMany("UserTables")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__user_tabl__roleI__2B3F6F97")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CSharp_Project.Models.CategoryTable", b =>
                {
                    b.Navigation("NewsTables");
                });

            modelBuilder.Entity("CSharp_Project.Models.NewsTable", b =>
                {
                    b.Navigation("CommentTables");
                });

            modelBuilder.Entity("CSharp_Project.Models.RoleTable", b =>
                {
                    b.Navigation("UserTables");
                });

            modelBuilder.Entity("CSharp_Project.Models.UserTable", b =>
                {
                    b.Navigation("CommentTables");

                    b.Navigation("NewsTables");
                });
#pragma warning restore 612, 618
        }
    }
}
